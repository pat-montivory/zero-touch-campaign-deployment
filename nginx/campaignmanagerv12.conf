

server {
    listen 80;
    listen [::]:80;
    server_name devpayload.southeastasia.cloudapp.azure.com;
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl;
    listen [::]:443 ssl;
    server_name devpayload.southeastasia.cloudapp.azure.com;

    # SSL
    ssl_certificate /etc/letsencrypt/live/devpayload.southeastasia.cloudapp.azure.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/devpayload.southeastasia.cloudapp.azure.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Logging with main_ext format
    access_log /var/log/nginx/access.log main_ext;
    error_log  /var/log/nginx/error.log warn;

    # Main app webroot
    root /home/azureuser/dev/campaignmanagerv12/public;
    index index.php index.html;

    # PHP handler
    location ~ \.php$ {
        include snippets/fastcgi-php.conf;
        fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
        fastcgi_param SCRIPT_FILENAME $request_filename;
        include fastcgi_params;
    }

    # Campaign assets fallback - try to find assets in any campaign folder
    location ^~ /assets/ {
        # First try main assets, then look for campaign-specific assets
        try_files $uri @try_campaign_assets;
    }
    
    # Static assets (general)
    location ~* \.(?:css|js|jpg|jpeg|png|gif|ico|webp|svg|eot|ttf|woff|woff2)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
        try_files $uri =404;
        access_log off;
    }

    # Admin routes
    location ~ ^/admin(/.*)?$ {
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Named location for campaign asset fallback
    location @try_campaign_assets {
        internal;
        # This will be handled by the campaign location blocks below
        return 404;
    }
    
    # Redirect bare signup/signin to campaign when referred from campaign
    location = /signup {
        if ($http_referer ~ "^https?://[^/]+/([A-Za-z0-9_-]+)") {
            set $campaign_name $1;
            return 302 https://$server_name/$campaign_name/signup$is_args$args;
        }
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    location = /signin {
        if ($http_referer ~ "^https?://[^/]+/([A-Za-z0-9_-]+)") {
            set $campaign_name $1;
            return 302 https://$server_name/$campaign_name/signin$is_args$args;
        }
        try_files $uri $uri/ /index.php?$query_string;
    }
    
    # Campaign static assets - handle before dynamic campaign location
    location ~ ^/([A-Za-z0-9_-]+)/(assets|css|js|images)/(.*)$ {
        set $campaign_name $1;
        set $asset_type $2;
        set $asset_file $3;
        
        # Try to serve campaign asset directly
        alias /home/azureuser/dev/campaignmanagerv12/campaigns/$campaign_name/public/$asset_type/;
        try_files /$asset_file @fallback_asset;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }
    
    # Fallback for assets not found in campaigns
    location @fallback_asset {
        internal;
        try_files $uri =404;
    }
        
    # Handle Laravel campaign PHP execution
    location @try_laravel_campaign {
        internal;
        
        # Extract campaign name again for Laravel handling
        if ($request_uri ~ ^/([A-Za-z0-9_-]+)(/.*)?$) {
            set $campaign_name $1;
            set $campaign_path $2;
        }
        
        if ($campaign_path = "") {
            set $campaign_path "/";
        }
        
        # Check if Laravel campaign exists
        try_files /campaigns/$campaign_name/public/index.php @campaign_php @main_fallback;
    }
    
    # Handle campaign PHP execution
    location @campaign_php {
        internal;
        fastcgi_pass unix:/var/run/php/php8.4-fpm.sock;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME /home/azureuser/dev/campaignmanagerv12/campaigns/$campaign_name/public/index.php;
        fastcgi_param REQUEST_URI $campaign_path$is_args$args;
        fastcgi_param SCRIPT_NAME /index.php;
    }
    
    # Fallback to main app
    location @main_fallback {
        internal;
        try_files $uri $uri/ /index.php?$query_string;
    }

    # Main app front controller
    location / {
        try_files $uri $uri/ /index.php?$query_string;
        error_page 404 = /index.php;
    }

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    
    # Security: Deny access to hidden files and sensitive paths
    location ~ /\. { deny all; access_log off; log_not_found off; }
    location ~* \.(env|log|git|svn|gitignore|gitattributes)$ { deny all; access_log off; log_not_found off; }
    location ~* ^/(storage|bootstrap)/.*\.php$ { deny all; access_log off; log_not_found off; }
}
